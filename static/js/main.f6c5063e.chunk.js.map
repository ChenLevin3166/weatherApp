{"version":3,"sources":["components/HomeForm.js","actions/cityWeatherAction.js","actions/favoriteAction.js","containers/Home.js","containers/Favorite.js","App.js","reducers/cityWeatherReducer.js","reducers/favoriteReducer.js","store.js","index.js"],"names":["HomeForm","props","handlerChangeCity","e","setState","nameOfCity","target","value","search","check","i","CityList","length","city","state","indexCityList","j","fiveDayList","indexfiveDayList","err","alert","handlerCity","cityFavorite","flag","isInFavorie","addToFavor","className","style","position","top","width","marginRight","marginLeft","type","placeholder","aria-label","onChange","this","id","onClick","aria-hidden","height","border","left","textAlign","currentCity","Temperature","Metric","Value","WeatherText","DailyForecasts","map","item","c","Minimum","display","DayWeek","parseInt","Component","changeCityWeather","newCityWeather","payload","addFavoriteCity","cityAddFavorite","Home","cityWeather","connect","cityWeatherReducer","disaptch","cityToAdd","Favorite","cityFavor","favoriteReducer","dispatch","addCity","App","data-toggle","data-target","aria-controls","aria-expanded","exact","to","path","component","initState","action","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6c5063e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../index.css';\r\n\r\nimport CityList from '../currentCity.json';\r\nimport fiveDayList from '../fiveDayWeather.json';\r\n\r\nclass HomeForm extends Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            nameOfCity: '',\r\n            isInFavorie: 'Add to favorite',\r\n            flag: 0,\r\n            //The index of city that user search for current weather, Tel-Aviv is default\r\n            indexCityList: 0,\r\n            //The index of city that user search for five days weather, Tel-Aviv is default\r\n            indexfiveDayList: 0\r\n        }\r\n    }\r\n\r\n    handlerChangeCity = (e) => {\r\n        // this.props.autoComplete(e.target.value);\r\n        this.setState({ nameOfCity: e.target.value });\r\n\r\n    }\r\n\r\n    search = () => {\r\n        try {\r\n            // Variable that check if found city in CityList\r\n            let check = false;\r\n            for (let i = 0; i < CityList.length; i++) {\r\n                if (CityList[i].city === this.state.nameOfCity) {\r\n                    this.setState({ indexCityList: i });\r\n                    for (let j = 0; j < fiveDayList.length; j++) {\r\n                        if (fiveDayList[j].city === this.state.nameOfCity) {\r\n                            this.setState({ indexfiveDayList: j });\r\n                            break;\r\n                        }\r\n                    }\r\n                    check = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!check) {\r\n                throw \"No data found for the city you searched for\"\r\n            }\r\n        }\r\n        catch (err) {\r\n            alert(err);\r\n        }\r\n        this.props.handlerCity(this.state.nameOfCity);\r\n    }\r\n    cityFavorite = () => {\r\n        if (this.state.flag === 0) {\r\n            this.setState({ isInFavorie: 'Remove from favorite ' });\r\n            this.setState({ flag: 1 });\r\n            this.props.addToFavor(this.state.nameOfCity);\r\n        }\r\n        else {\r\n            this.setState({ isInFavorie: 'Add to favorite' });\r\n            this.setState({ flag: 0 });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{ position: \"relative\", top: \"60px\" }}>\r\n                <div className=\"input-group md-form form-sm form-2 pl-0\" style={{ position: \"relative\", width: \"300px\", marginRight: \"auto\", marginLeft: \"auto\" }}>\r\n                    <input className=\"form-control my-0 py-1 red-border\" type=\"text\" placeholder=\"Search city\" aria-label=\"Search\" onChange={this.handlerChangeCity} />\r\n                    <div className=\"input-group-append\">\r\n                        <button id=\"searchButton\" onClick={this.search}>\r\n                            <span className=\"input-group-text red lighten-3\" id=\"basic-text1\" ><i className=\"fas fa-search text-grey\"\r\n                                aria-hidden=\"true\"> </i></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div style={{ position: \"relative\", top: \"30px\", width: \"900px\", height: \"400px\", border: \"3px solid blue\", marginRight: \"auto\", marginLeft: \"auto\" }}>\r\n                    <button style={{ position: \"relative\", left: \"700px\", top: \"20px\" }} onClick={this.cityFavorite}>{this.state.isInFavorie} <i className=\"fa fa-star\" aria-hidden=\"true\"></i></button>\r\n                    <div style={{ position: \"relative\", left: \"50px\", textAlign: \"center\", width: \"100px\", top: \"-10px\" }}>\r\n                        {this.props.currentCity}\r\n                        <br></br>\r\n                        {`${CityList[this.state.indexCityList].Temperature.Metric.Value}Â° C`}\r\n                    </div>\r\n                  <h2 style={{position: \"relative\",top:\"50px\", textAlign:\"center\"}}>{CityList[this.state.indexCityList].WeatherText}</h2> \r\n                    <div className=\"row\">\r\n                    {fiveDayList[this.state.indexfiveDayList].DailyForecasts.map((item) => {\r\n\r\n                        let c = (item.Temperature.Minimum.Value - 32) * (5 / 9);\r\n\r\n                        return <div className=\"card border-info mb-3\" className=\"col-2\" style={{ position: \"relative\",top:\"110px\",left:\"75px\", display: \"inline\", width: \"20px\", height: \"100px\",border: \"3px solid #34DDE9\" }}>\r\n                            <div className=\"card-body text-info\" >\r\n                                <h5 className=\"card-title\" style={{textAlign:\"center\"}}>{item.DayWeek}</h5>\r\n                                <p className=\"card-text\" style={{textAlign:\"center\"}}>{`${parseInt(c)}Â° C`}</p>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n</div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default HomeForm;","\r\nexport const changeCityWeather = (newCityWeather) => {\r\n    return {\r\n        type: \"Change_City_Weather\",\r\n        payload: newCityWeather\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","export const addFavoriteCity = (cityAddFavorite) => {\r\n    \r\n    return {\r\n        type: \"Add_Favorite\",\r\n        payload:cityAddFavorite\r\n    }\r\n  \r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport HomeForm from '../components/HomeForm';\r\nimport { changeCityWeather } from '../actions/cityWeatherAction';\r\nimport {addFavoriteCity} from '../actions/favoriteAction'\r\n\r\n\r\nclass Home extends Component {\r\n   \r\n\r\n    handlerCity = (city) => {\r\n        this.props.changeCityWeather(city)\r\n    }\r\n\r\n    addToFavor=(city)=>{\r\n        if(city===\"\"){\r\n            this.props.addFavoriteCity(\"Tel-Aviv\")\r\n        }\r\n        else{\r\n            this.props.addFavoriteCity(city)\r\n        }\r\n  \r\n    }\r\n\r\n\r\nrender() {\r\n    return (\r\n        <div>\r\n            <HomeForm currentCity={this.props.cityWeather} handlerCity={this.handlerCity} addToFavor={this.addToFavor} />\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cityWeather: state.cityWeatherReducer.cityWeather,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = disaptch => {\r\n    return {\r\n        changeCityWeather:(newCityWeather)=> {\r\n            disaptch(changeCityWeather(newCityWeather))\r\n        },\r\n        addFavoriteCity:(cityToAdd)=> {\r\n            disaptch(addFavoriteCity(cityToAdd))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CityList from '../currentCity.json';\r\nimport { addFavoriteCity } from '../actions/favoriteAction';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nclass Favorite extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\" >\r\n                {this.props.cityFavor.map((item) => {\r\n                    return <div className=\"card\" className=\"col-2\" style={{position: \"relative\",top:\"50px\",left:\"75px\", display: \"inline\", width: \"20px\", height: \"100px\",border: \"3px solid #34DDE9\" }} >\r\n                    <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{item}</h5>\r\n                      <p className=\"card-text\"></p>\r\n                      {/* <a href=\"/\" className=\"btn btn-primary\">Back to home</a> */}\r\n                    </div>\r\n                  </div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cityFavor: state.favoriteReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addFavoriteCity(addCity) {\r\n            dispatch(addFavoriteCity(addCity))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorite);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { HashRouter  as Router,Route, NavLink } from 'react-router-dom';\nimport Home from './containers/Home';\nimport Favorite from './containers/Favorite';\nimport { changeCityWeather } from './actions/cityWeatherAction';\nimport {addFavoriteCity} from './actions/favoriteAction';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <p className=\"navbar-brand\" >What's The Weather</p>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n              <div className=\"navbar-nav\" style={{position:\"relative\", marginLeft:\"900px\"}}>\n                <NavLink className=\"nav-link\" exact to='/'>Home</NavLink>\n                <NavLink className=\"nav-link\" to='/favorites' style={{position:\"relative\", marginLeft:\"40px\"}}>Favorites</NavLink>\n              </div>\n            </div>\n          </nav>\n          <div className=\"container\">\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/favorites\" exact component={Favorite} />\n        </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n     cityWeather: state.cityWeatherReducer.cityWeather,\n     cityFavor: state.favoriteReducer\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeCityWeather(newCityWeather) {\n      dispatch(changeCityWeather(newCityWeather))\n    },\n    addFavoriteCity(addCity){\n      dispatch(addFavoriteCity(addCity))\n    }\n\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const initState = {\r\n    cityWeather: 'Tel-Aviv'\r\n}\r\nconst cityWeatherReducer = (state =initState , action) => {\r\n    \r\n    switch(action.type){\r\n        case \"Change_City_Weather\":\r\n            state = {...state, cityWeather: action.payload}\r\n        break;\r\n        default:\r\n        break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default cityWeatherReducer;","\r\nconst favoriteReducer = (state =[] , action) => {\r\n    \r\n    switch(action.type){\r\n        case \"Add_Favorite\":\r\n            state = [...state,  action.payload]\r\n        break;\r\n        default:\r\n        break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default favoriteReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\nimport cityWeatherReducer from './reducers/cityWeatherReducer'\r\nimport favoriteReducer from './reducers/favoriteReducer';\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        cityWeatherReducer,\r\n        favoriteReducer\r\n    }),\r\n    {},\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store'\n\n\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}